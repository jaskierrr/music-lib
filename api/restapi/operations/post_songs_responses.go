// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"main/internal/models"
)

// PostSongsCreatedCode is the HTTP code returned for type PostSongsCreated
const PostSongsCreatedCode int = 201

/*
PostSongsCreated Song is created

swagger:response postSongsCreated
*/
type PostSongsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Song `json:"body,omitempty"`
}

// NewPostSongsCreated creates PostSongsCreated with default headers values
func NewPostSongsCreated() *PostSongsCreated {

	return &PostSongsCreated{}
}

// WithPayload adds the payload to the post songs created response
func (o *PostSongsCreated) WithPayload(payload *models.Song) *PostSongsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post songs created response
func (o *PostSongsCreated) SetPayload(payload *models.Song) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSongsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostSongsBadRequestCode is the HTTP code returned for type PostSongsBadRequest
const PostSongsBadRequestCode int = 400

/*
PostSongsBadRequest bad request

swagger:response postSongsBadRequest
*/
type PostSongsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostSongsBadRequest creates PostSongsBadRequest with default headers values
func NewPostSongsBadRequest() *PostSongsBadRequest {

	return &PostSongsBadRequest{}
}

// WithPayload adds the payload to the post songs bad request response
func (o *PostSongsBadRequest) WithPayload(payload *models.ErrorResponse) *PostSongsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post songs bad request response
func (o *PostSongsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSongsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
