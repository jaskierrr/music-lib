swagger: "2.0"
info:
  description: "This is a music-lib project"
  version: "1.0.0"
  title: "Music Library"
host: "localhost:8080"
basePath: "/"
schemes:
  - http
paths:
  /songs:
    get:
      description: Return songs
      parameters:
        - in: body
          name: song
          description: song
          required: true
          schema:
            $ref: "#/definitions/Song"
        - in: query
          name: page
          description: page number
          required: true
          type: integer
          default: 0
        - in: query
          name: limit
          description: limit of pages
          required: true
          type: integer
          default: 0
      responses:
        200:
          description: song list
          schema:
            type: array
            items:
              $ref: '#/definitions/Song'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      description: Delete song
      parameters:
        - name: id
          in: query
          description: song id
          required: false
          type: integer
      responses:
        204:
          description: no content
        400:
          description: bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      description: Update song
      parameters:
        - in: body
          name: song
          description: song
          required: true
          schema:
            $ref: "#/definitions/Song"
      responses:
        200:
          description: Song is updated
          schema:
              $ref: '#/definitions/Song'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
    post:
      description: Create song
      parameters:
        - in: body
          name: song
          description: song
          required: true
          schema:
            $ref: "#/definitions/NewSong"
      responses:
        201:
          description: Song is created
          schema:
              $ref: '#/definitions/Song'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
  /songs/lyrics:
    get:
      description: Return song lyrics
      parameters:
        - name: id
          in: query
          description: song id
          required: true
          type: integer
        - name: couplet
          in: query
          description: couplet number
          required: false
          type: integer
          default: 0
        - name: limit
          in: query
          description: limit of couplets
          required: false
          type: integer
          default: 0
      responses:
        200:
          description: song lyrics
          schema:
            type: string
        400:
          description: bad request
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
  Song:
    type: object
    properties:
      id:
        type: integer
        example: 1
      group:
        type: string
        example: "Muse"
      song:
        type: string
        example: "Supermassive Black Hole"
      releaseDate:
        type: string
        example: "2006-07-16"
      lyrics:
        type: string
        example: "Ooh baby, don't you know I suffer?"
      link:
        type: string
        example: "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
  NewSong:
    type: object
    properties:
      group:
        type: string
        example: "Muse"
      song:
        type: string
        example: "Supermassive Black Hole"
      releaseDate:
        type: string
        example: "2006-07-16"
      lyrics:
        type: string
        example: "Ooh baby, don't you know I suffer?"
      link:
        type: string
        example: "https://www.youtube.com/watch?v=Xsp3_a-PMTw"
  SongDetail:
    type: object
    properties:
      releaseDate:
        type: string
        example: "2006-07-16"
      Text:
        type: string
        example: "Ooh baby, don't you know I suffer?"
      link:
        type: string
        example: "https://www.youtube.com/watch?v=Xsp3_a-PMTw"

  ErrorResponse:
    title: ErrorResponse
    description: general error
    allOf:
      - properties:
          error:
            type: object
            properties:
              message:
                description: Message
                type: string
